import random
def leftrotate(x,c):
    return (x<<c)
s=[7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,
    4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21]
k=[0xd76aa478, 0xe8c7b756, 0x242070db, 0xc1bdceee,0xf57c0faf, 0x4787c62a, 0xa8304613, 0xfd469501,0x698098d8, 0x8b44f7af, 0xffff5bb1, 0x895cd7be,
   0x6b901122, 0xfd987193, 0xa679438e, 0x49b40821,0xf61e2562, 0xc040b340, 0x265e5a51, 0xe9b6c7aa,0xd62f105d, 0x02441453, 0xd8a1e681, 0xe7d3fbc8,
   0x21e1cde6, 0xc33707d6, 0xf4d50d87, 0x455a14ed,0xa9e3e905, 0xfcefa3f8, 0x676f02d9, 0x8d2a4c8a,0xfffa3942, 0x8771f681, 0x6d9d6122, 0xfde5380c,
   0xa4beea44, 0x4bdecfa9, 0xf6bb4b60, 0xbebfbc70,0x289b7ec6, 0xeaa127fa, 0xd4ef3085, 0x04881d05,0xd9d4d039, 0xe6db99e5, 0x1fa27cf8, 0xc4ac5665,
   0xf4292244, 0x432aff97, 0xab9423a7, 0xfc93a039,0x655b59c3, 0x8f0ccc92, 0xffeff47d, 0x85845dd1,0x6fa87e4f, 0xfe2ce6e0, 0xa3014314, 0x4e0811a1,
   0xf7537e82, 0xbd3af235, 0x2ad7d2bb, 0xeb86d391]

msg = random.randint(1,2**512)
binarymsg="{0:b}".format(msg)
print("Binary msg",binarymsg)
length=len(binarymsg)
print("Length of  original is ",length)


def funcfor512(msg):
    a0 = 0x67452301
    b0 = 0xefcdab89
    c0 = 0x98badcfe
    d0 = 0x10325476

    lenghtofmsg=len("{0:b}".format(msg))
    m=[]
    q=lenghtofmsg//512
    r=lenghtofmsg%512
    if(r>=448):
        noofblocks=q+2
    else:
        noofblocks=q+1
    print("Blocks is =",noofblocks)
    binarymsg1 = "{0:b}".format(msg)
    length1=len(binarymsg1)
    lengthinbinary1="{0:b}".format(length1)
    LENGTH1=len(lengthinbinary1)
    binarymsg1+="1"
    binarymsg1+=(((512*noofblocks)-lenghtofmsg-64-1)*"0")
    binarymsg1 += lengthinbinary1 + str((64 - LENGTH1) * "0")
    print("final binary msg after appending=", binarymsg1)
    print("Length of message after appending is ",len(binarymsg1))
    index2=0
    for j in range(0,noofblocks):
        print("j value is",j)
        msg=binarymsg1[index2:index2+512]
        index2+=512
        index1=0
        if len(m)>0:
            m.clear()
        for i in range(0,16):
            m.append(msg[index1:index1+32])
            index1+=32
        print("M values are",m)
        for i in range(0,len(m)):
            m[i]=int(m[i],2)
        print("M values are", m)
        A=a0
        B=b0
        C=c0
        D=d0
        print("Value of A is =",A)
        print("Value of B is =",B)
        print("Value of C is =",C)
        print("Value of D is =",D)
        for i in range(0,64):
            F=0
            g=0
            if i>=0 and i<=15:
                F=(B and C) or ((not B) and D)
                g=i
            elif i>=16 and i<=31:
                F = (D and B) or ((not D) and C)
                g = (5*i + 1)%16
            elif  i>=32 and i<=47:
                F= B^C^D
                g= (3*i + 5)%16
            elif i>=48 and i<=63:
                F= C^(B or (not D))
                g=(7*i)%16
            F= (F + A + k[i] + m[g])%(2**32)
            A = D
            D = C
            C = B
            B = B + leftrotate(F, s[i])
        a0=(A+a0)%(2**32)
        b0=(B+b0)%(2**32)
        c0=(C+c0)%(2**32)
        d0=(D+d0)%(2**32)

    pa0=((32-len("{0:b}".format(a0)))*"0")+"{0:b}".format(a0)
    pb0=((32-len("{0:b}".format(b0)))*"0")+"{0:b}".format(b0)
    pc0=((32-len("{0:b}".format(c0)))*"0")+"{0:b}".format(c0)
    pd0=((32-len("{0:b}".format(d0)))*"0")+"{0:b}".format(d0)
    ans = ""
    ans += pa0+pb0+pc0+pd0
    print("Message digest in decimal is ",int(ans,2))
    print("Message Digest length is",len(ans))
    print("Message Digest in binary is ",ans)
funcfor512(msg)

'''
Output:
1.)
Binary msg
Length of  original is  510
Blocks is = 2
final binary msg after appending
Length of message after appending is  1024
M values are ['10001110111101010101100100011101', '01111010100010000110000110110110', '11010000100000101010001111001110', '10101100011011011111001101110100', '00100010000101011111100111110101', '10000010110001001111000101011100', '00000000111100100101111000001101', '10111000000111010011011010011000', '11010001010111001010000000100001', '10100100001100110101010110100011', '00100111011001100101111000010100', '01100110100110011100100111010110', '00100010111011011100001001001011', '01100000011010011110000011011101', '10000110010101100100110111001001', '11101111100000000111110010100110']
M values are [2398443805, 2055758262, 3498222542, 2892886900, 571865589, 2193944924, 15883789, 3088922264, 3512508449, 2754827683, 661020180, 1721354710, 586007115, 1617551581, 2253802953, 4018175142]
Value of A is = 1732584193
Value of B is = 4023233417
Value of C is = 2562383102
Value of D is = 271733878
M values are
M values are [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4278190080, 0]
Value of A is = 4004872570
Value of B is = 3066632706
Value of C is = 3927329655
Value of D is = 3171730159
Message digest in decimal is  241837737852321056857874523536407568001
Message Digest length is 128
Message Digest in binary is  10110101111100000100000100001100110001111101000101110101100101000011011010111110101001110000100100110001000011101001111010000001
----------------------------------------------------------------------------------------------------------------------------------------------------------------

2.)Binary msg 100111000101101101110100010100010010100100111100101000010001010000010110110100001101000111100100111101000010100100101101100011111010011010111011011001011010011100010000101011101101100100000001010011010110011010010000010010111100111101011011000010011011000
Length of  original is  255
Blocks is = 1
final binary msg after appending
Length of message after appending is  512
M values are ['10011100010110110111010001010001', '00101001001111001010000100010100', '00010110110100001101000111100100', '11110100001010010010110110001111', '10100110101110110110010110100111', '00010000101011101101100100000001', '01001101011001101001000001001011', '11001111010110110000100110110001', '00000000000000000000000000000000', '00000000000000000000000000000000', '00000000000000000000000000000000', '00000000000000000000000000000000', '00000000000000000000000000000000', '00000000000000000000000000000000', '11111111000000000000000000000000', '00000000000000000000000000000000']
M values are [2623239249, 691839252, 382783972, 4096339343, 2797299111, 279894273, 1298567243, 3478849969, 0, 0, 0, 0, 0, 0, 4278190080, 0]
Value of A is = 1732584193
Value of B is = 4023233417
Value of C is = 2562383102
Value of D is = 271733878
Message digest in decimal is  263296496639534768783748562763351144703
Message Digest length is 128
Message Digest in binary is  11000110000101010000111110001010111000111010110010010000000100100001100101011001110000011000011111001010011111010011100011111111
'''

